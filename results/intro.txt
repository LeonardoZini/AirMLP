=======================FIRST EXPERIMENT==========================================
Instead of predicting directly the corrected output value and checking it with respect to the ground truth, i want that the netowrk predict 
a value that aims to correct the original value of pm2.5 of the wise-air's device.
Basically, the loss is computed in this manner: 
        y_pred = model(x)
        loss = loss_fun(x[:,5]-y_pred, y)
where x[:,5] takes the original value of pm2.5 of wise-ari's device.

I also introduced a new attribute that substitute the "valid_at" column, since i cannot use string in torch's tensor.
It basically divide the 24 hours of a day in four different bins (one every 6 hours, starting from midnight), expressed in value from 0 to 1. 

=======================SECOND EXPERIMENT====================================================
Due to the lack of results with the previous model (a feed-forward network), I decided to basically restart from scratch, a part the part of preprocessing.
So, starting from an union of two-months-data of three different wise-air's device and align them with the arpa's data, i trained a LSTM.
Another substantial difference with the previous approach is how i compute the loss, since with this model i don't want to predict a correcting value but an already-valid value.
I also remove every reference to the time, also the attribute 'hours'